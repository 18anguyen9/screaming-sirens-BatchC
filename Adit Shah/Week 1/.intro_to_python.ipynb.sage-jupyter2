{"backend_state":"init","connection_file":"/projects/4559949a-12be-48f9-8c58-b62a9ca1e674/.local/share/jupyter/runtime/kernel-18abe83a-7647-48d1-a722-95066ebe387d.json","kernel":"cv_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"colab":{"name":"intro_to_python_new.ipynb","provenance":[]},"interpreter":{"hash":"08210294964727e4010dccc398c44f22b92a2e77e2aceea574ad21eae77cd8e8"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"},"orig_nbformat":4},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"04473f","input":"a = 1\nb = 2\nif a > b:\n    print(\"a is greater than b\")","metadata":{"id":"K7aHB-OdQPSN"},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"0b6552","input":"my_list = [1, 2, 3, 4, 5]","metadata":{"id":"Z7Kr_5ghQPSI"},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"114b8c","input":"out = add_numbers(1, 2, 3)\nout","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iB4Vf2jcQPSR","outputId":"fd3b4732-928e-4120-f13c-17599e818c37"},"output":{"0":{"data":{"text/plain":"6"},"exec_count":0,"output_type":"execute_result"}},"pos":64,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1e316a","input":"import random\nrandom.randint(0,5) # this gives one of the numbers between and including 0 and 5","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SQyvSt0CQPSY","outputId":"13339029-f606-4ede-d0b4-87751d658c12"},"output":{"0":{"data":{"text/plain":"1"},"exec_count":0,"output_type":"execute_result"}},"pos":107,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"23ded9","input":"my_colors = ['red', 'black', 'blue', 'orange']","metadata":{"id":"YNn1S-ErQPSL"},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"2c1cfc","input":"def add_numbers(a, b, c):\n    total = a + b + c\n    return total","metadata":{"id":"uLcQ-es8QPSR"},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"2ecb14","input":"for i in range(5): # range functions the same here as the list [0,1,2,3,4,5]\n    print('i = ', i)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1WDJw-zLQPSN","outputId":"64cc601f-8ed7-4213-d44d-1853b53b1b86"},"output":{"0":{"name":"stdout","output_type":"stream","text":"i =  0\ni =  1\ni =  2\ni =  3\ni =  4\n"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"3441d5","input":"f/=2 # there is also +=, -=, and *=\nf","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mp0kRwWzQPSG","outputId":"1714facc-05ca-41da-a3be-0c304058be18"},"output":{"0":{"data":{"text/plain":"3.0"},"exec_count":0,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"46f4da","input":"for number in my_list:\n  print(number)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dwcVU8rCQPSM","outputId":"19fb28c7-c26e-4eb0-a298-b692b86e8d06"},"output":{"0":{"name":"stdout","output_type":"stream","text":"1\n2\n3\n4\n5\n"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"541542","input":"g = a / b\ng","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GOaoeDtAQPSE","outputId":"bcb07a69-6491-4f26-f21d-45805264437f"},"output":{"0":{"data":{"text/plain":"0.5"},"exec_count":0,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5595c9","input":"my_list[2] # here, 2 is the index you are accessing","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y1ii3jWLQPSJ","outputId":"96550428-16e8-4f84-e7ee-f743f8af0127"},"output":{"0":{"data":{"text/plain":"3"},"exec_count":0,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5dba03","input":"my_first_function()","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bUc2IWbKQPSQ","outputId":"7b42c258-650a-463a-8279-3e7f7bd3c2c7"},"output":{"0":{"name":"stdout","output_type":"stream","text":"Hello world\n"}},"pos":57,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"655455","input":"","metadata":{"id":"vE3I6c9lTfUw"},"pos":102,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6a814f","input":"def my_first_function():\n    print('Hello world')","metadata":{"id":"1d-Rq_JjQPSQ"},"pos":56,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"70da60","input":"print(my_list[0], my_list[1], my_list[2], my_list[3], my_list[4])","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"mBa3oPUMQPSK","outputId":"0ab14bb0-fbf4-4adc-c0a1-7ddba8d4a19b"},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7be292","input":"i = 0\nwhile i < 5:\n    print(\"Hello World\")\n    i = i + 1","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j2OvkKqWQPSN","outputId":"e097da35-32f2-43f3-805e-52aac26f7abd"},"output":{"0":{"name":"stdout","output_type":"stream","text":"Hello World\nHello World\nHello World\nHello World\nHello World\n"}},"pos":40,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"827eaa","input":"from random import randint\nrandint(0,5) # now we can exclude the random. prefix","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ddsrumBjQPSY","outputId":"5871db5c-53ab-4945-8a53-38a0ae8d20c5"},"output":{"0":{"data":{"text/plain":"4"},"exec_count":0,"output_type":"execute_result"}},"pos":111,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"8d4281","input":"g = g*2 # the same thing works for /, +, and -\ng","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1nDLTWcpQPSF","outputId":"548902ab-03ee-4750-9aab-101ac788bf2b"},"output":{"0":{"data":{"text/plain":"1.0"},"exec_count":0,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"941872","input":"from time import time as t\nt()","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QGbFdUSTQPSZ","outputId":"1b5cf26f-ef9f-4d2d-c29d-eba33b097961"},"output":{"0":{"data":{"text/plain":"1655747915.1418505"},"exec_count":0,"output_type":"execute_result"}},"pos":113,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9801e9","input":"","metadata":{"id":"x7wxxa0_Tf1S"},"pos":101,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c3f3e3","input":"import time\ntime.time() # you will see this go up as you rerun it","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pt3_2jHFQPSY","outputId":"c0b02164-354d-49be-e965-d33c0c806e58"},"output":{"0":{"data":{"text/plain":"1655747907.4349885"},"exec_count":0,"output_type":"execute_result"}},"pos":105,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d39f57","input":"def add_numbers(a, b, c):\n    total = a + b + c\n    print(total)","metadata":{"id":"vdvERGqhQPSQ"},"pos":60,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d3e5ac","input":"a = 1\nb = 1\nif a > b:\n    print(\"a is greater than b\")\nelif a == b:\n    print(\"a equals b\")\nelse:\n    print(\"b is less than b\")","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KqnXKM2fQPSO","outputId":"0e6b4490-1b02-40d0-db5e-aafb906e31b9"},"output":{"0":{"name":"stdout","output_type":"stream","text":"a equals b\n"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d59a7c","input":"add_numbers(1, 2, 3)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hCzjHwmQQPSQ","outputId":"d7d5c314-cb20-464d-977b-e709b0fa174e"},"output":{"0":{"name":"stdout","output_type":"stream","text":"6\n"}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d5a03c","input":"from random import randint as r\nr()","metadata":{"id":"KkvmLPPIRC3s"},"pos":114,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d95e67","input":"","metadata":{"id":"KU1Mi35PTf_y"},"pos":100,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e332d5","input":"a = 1\nb = 2\nif a > b:\n    print(\"a is greater than b\")\nelse:\n    print(\"b is less than a\")","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mzeHNJjtQPSO","outputId":"c0bcfd00-f8ae-484c-d1ae-c67130d8d7b2"},"output":{"0":{"name":"stdout","output_type":"stream","text":"b is less than a\n"}},"pos":44,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f87061","input":"f = b * c\nf","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wIzGAkkWQPSD","outputId":"9c19e7dd-a611-42c2-9fe7-be74dc5f6c7a"},"output":{"0":{"data":{"text/plain":"6"},"exec_count":0,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"5d7835","input":"import numpy as np","metadata":{"id":"3DvgKoTLQPSS"},"pos":76,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"7fbb56","input":"from PIL import Image\nfrom skimage import io\nimport matplotlib.pyplot as plt\n\nurl = \"https://unsplash.com/s/photos/swimming-pool\"\n\nplt.axis(\"off\")\n\nimg = io.imread(url)\nplt.imshow(img)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplt.axis(\"off\")\n\n#zero out red and green channels\nr,g,b = pil_img.split()\nr = r.point(lambda i: i * 0)\ng = g.point(lambda i: i * 0)\n\n#display image\nresult = Image.merge('RGB', (r,g,b))\nplt.imshow(result)\nplt.show()\n\n\n\nplt.axis(\"off\")\n\nresult = result.rotate(270) #rotate 270 degrees counterclockwise\nplt.imshow(result)\nplt.show()","output":{"0":{"ename":"ValueError","evalue":"Could not find a backend to open `/tmp/tmpaeiyf85o`` with iomode `ri`.","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 9>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m url \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhttps://unsplash.com/s/photos/swimming-pool\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m      7\u001b[0m plt\u001b[38;5;241m.\u001b[39maxis(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124moff\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m----> 9\u001b[0m img \u001b[38;5;241m=\u001b[39m \u001b[43mio\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mimread\u001b[49m\u001b[43m(\u001b[49m\u001b[43murl\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     10\u001b[0m plt\u001b[38;5;241m.\u001b[39mimshow(img)\n\u001b[1;32m     26\u001b[0m plt\u001b[38;5;241m.\u001b[39maxis(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124moff\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n","File \u001b[0;32m~/enter/envs/cv_env/lib/python3.8/site-packages/skimage/io/_io.py:53\u001b[0m, in \u001b[0;36mimread\u001b[0;34m(fname, as_gray, plugin, **plugin_args)\u001b[0m\n\u001b[1;32m     50\u001b[0m         plugin \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtifffile\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m     52\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m file_or_url_context(fname) \u001b[38;5;28;01mas\u001b[39;00m fname:\n\u001b[0;32m---> 53\u001b[0m     img \u001b[38;5;241m=\u001b[39m \u001b[43mcall_plugin\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mimread\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplugin\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mplugin\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mplugin_args\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     55\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mhasattr\u001b[39m(img, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mndim\u001b[39m\u001b[38;5;124m'\u001b[39m):\n\u001b[1;32m     56\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m img\n","File \u001b[0;32m~/enter/envs/cv_env/lib/python3.8/site-packages/skimage/io/manage_plugins.py:207\u001b[0m, in \u001b[0;36mcall_plugin\u001b[0;34m(kind, *args, **kwargs)\u001b[0m\n\u001b[1;32m    203\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mIndexError\u001b[39;00m:\n\u001b[1;32m    204\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mRuntimeError\u001b[39;00m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCould not find the plugin \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m for \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m.\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;241m%\u001b[39m\n\u001b[1;32m    205\u001b[0m                            (plugin, kind))\n\u001b[0;32m--> 207\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/enter/envs/cv_env/lib/python3.8/site-packages/skimage/io/_plugins/imageio_plugin.py:10\u001b[0m, in \u001b[0;36mimread\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[38;5;129m@wraps\u001b[39m(imageio_imread)\n\u001b[1;32m      9\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mimread\u001b[39m(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m---> 10\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m np\u001b[38;5;241m.\u001b[39masarray(\u001b[43mimageio_imread\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m)\n","File \u001b[0;32m~/enter/envs/cv_env/lib/python3.8/site-packages/imageio/__init__.py:97\u001b[0m, in \u001b[0;36mimread\u001b[0;34m(uri, format, **kwargs)\u001b[0m\n\u001b[1;32m     68\u001b[0m \u001b[38;5;124;03m\"\"\"imread(uri, format=None, **kwargs)\u001b[39;00m\n\u001b[1;32m     69\u001b[0m \n\u001b[1;32m     70\u001b[0m \u001b[38;5;124;03mReads an image from the specified file. Returns a numpy array, which\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     86\u001b[0m \u001b[38;5;124;03m    to see what arguments are available for a particular format.\u001b[39;00m\n\u001b[1;32m     87\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m     89\u001b[0m warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m     90\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mStarting with ImageIO v3 the behavior of this function will switch to that of\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m     91\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m iio.v3.imread. To keep the current behavior (and make this warning dissapear)\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     94\u001b[0m     stacklevel\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m2\u001b[39m,\n\u001b[1;32m     95\u001b[0m )\n\u001b[0;32m---> 97\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mimread_v2\u001b[49m\u001b[43m(\u001b[49m\u001b[43muri\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mformat\u001b[39;49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mformat\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/enter/envs/cv_env/lib/python3.8/site-packages/imageio/v2.py:200\u001b[0m, in \u001b[0;36mimread\u001b[0;34m(uri, format, **kwargs)\u001b[0m\n\u001b[1;32m    197\u001b[0m imopen_args \u001b[38;5;241m=\u001b[39m decypher_format_arg(\u001b[38;5;28mformat\u001b[39m)\n\u001b[1;32m    198\u001b[0m imopen_args[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlegacy_mode\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[0;32m--> 200\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m \u001b[43mimopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43muri\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mri\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mimopen_args\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mas\u001b[39;00m file:\n\u001b[1;32m    201\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m file\u001b[38;5;241m.\u001b[39mread(index\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n","File \u001b[0;32m~/enter/envs/cv_env/lib/python3.8/site-packages/imageio/core/imopen.py:303\u001b[0m, in \u001b[0;36mimopen\u001b[0;34m(uri, io_mode, plugin, extension, format_hint, legacy_mode, **kwargs)\u001b[0m\n\u001b[1;32m    297\u001b[0m         err_msg \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m (\n\u001b[1;32m    298\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124mBased on the extension, the following plugins might add capable backends:\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    299\u001b[0m             \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00minstall_candidates\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    300\u001b[0m         )\n\u001b[1;32m    302\u001b[0m request\u001b[38;5;241m.\u001b[39mfinish()\n\u001b[0;32m--> 303\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m err_type(err_msg)\n","\u001b[0;31mValueError\u001b[0m: Could not find a backend to open `/tmp/tmpaeiyf85o`` with iomode `ri`."]},"1":{"data":{"image/png":"a127a7d7ceaab83f99da7815f2687617ec920f3d","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":1,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":99,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"e8b4ab","input":"plt.axis(\"off\")\n\nresult = result.rotate(270) #rotate 270 degrees counterclockwise\nplt.imshow(result)\nplt.show()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":377},"id":"oq4rqLRiTOSu","outputId":"4a156802-a24a-419d-e622-2b5f33bbd364"},"output":{"0":{"ename":"NameError","evalue":"name 'plt' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [11]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241m.\u001b[39maxis(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124moff\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      3\u001b[0m result \u001b[38;5;241m=\u001b[39m result\u001b[38;5;241m.\u001b[39mrotate(\u001b[38;5;241m270\u001b[39m) \u001b[38;5;66;03m#rotate 270 degrees counterclockwise\u001b[39;00m\n\u001b[1;32m      4\u001b[0m plt\u001b[38;5;241m.\u001b[39mimshow(result)\n","\u001b[0;31mNameError\u001b[0m: name 'plt' is not defined"]}},"pos":96,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"2657fc","input":"a = 1\nb = 2\nc = 3\na # when you put a variable by itself, its value will be printed (This is a comment - anything after a # on the same line will be ignored)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lYt96PjpQPSA","outputId":"4820a63e-5f46-4dda-c0bb-d132a09f3980"},"output":{"0":{"data":{"text/plain":"1"},"exec_count":13,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"1a1cad","input":"d = a + b\nd","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jXIckzv2QPSC","outputId":"f29fafeb-51cc-4261-fb32-fe1a8b28c13c"},"output":{"0":{"data":{"text/plain":"3"},"exec_count":14,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"da4469","input":"e = c - a\ne","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H0WW61KRQPSD","outputId":"1a936cc3-0156-46bc-bfec-c7194d30aeb2"},"output":{"0":{"data":{"text/plain":"2"},"exec_count":15,"output_type":"execute_result"}},"pos":7,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"408503","input":"a = 2.0\nb= 3.0\nc = 4.0\n\nd= a*b\nd\n\ne = b-c\ne \n\nf = c/a\nf\n\ng = a + c\ng\n\nd /= a\nd\n\nif float(a) == a:\n    print(\"hi\")","metadata":{"id":"HCEAnMnDQPSH"},"output":{"0":{"name":"stdout","output_type":"stream","text":"hi\n"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"ef1330","input":"from math import sqrt\nx = sqrt(64)\nx","metadata":{"id":"-GtaLCXYQPSY"},"output":{"0":{"data":{"text/plain":"8.0"},"exec_count":17,"output_type":"execute_result"}},"pos":109,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"fed04d","input":"from PIL import Image\nfrom skimage import io\nimport matplotlib.pyplot as plt\n\nurl = \"https://www.akc.org/wp-content/uploads/2017/11/GettyImages-187066830.jpg\"\n\nplt.axis(\"off\")\n\nimg = io.imread(url)\nplt.imshow(img)\nplt.show()","metadata":{"id":"8Ay58KUqTejo"},"output":{"0":{"data":{"image/png":"7712922aa4b08c1de1ff6953607ee24d415573ea","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":18,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":98,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"997301","input":"my_array = np.zeros((2,3)) # (2,3) is the shape of the array\nmy_array","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hL0rMwfGQPSS","outputId":"c2c570e9-0ce3-4acf-d688-113df7ebaf0c"},"output":{"0":{"data":{"text/plain":"array([[0., 0., 0.],\n       [0., 0., 0.]])"},"exec_count":2,"output_type":"execute_result"}},"pos":78,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"c60494","input":"a = True\nb = True or False\nc = False\n\nd = a+b\nprint(d)\n\ne =a*c\ne\n\nf= b-c\nf\n\ng = c/a\ng\n\nprint(a, b, c)","metadata":{"id":"NmcTzinvQPSI"},"output":{"0":{"name":"stdout","output_type":"stream","text":"2\nTrue True False\n"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"a684e1","input":"plt.axis(\"off\")\n\n#zero out red and green channels\nr,g,b = pil_img.split()\nr = r.point(lambda i: i * 0)\ng = g.point(lambda i: i * 0)\n\n#display image\nresult = Image.merge('RGB', (r,g,b))\nplt.imshow(result)\nplt.show()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":197},"id":"2kGkRWP9S31H","outputId":"a44a57b2-0fa3-43e5-80bd-b2c8466e2407"},"output":{"0":{"ename":"NameError","evalue":"name 'pil_img' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [26]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m plt\u001b[38;5;241m.\u001b[39maxis(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124moff\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      3\u001b[0m \u001b[38;5;66;03m#zero out red and green channels\u001b[39;00m\n\u001b[0;32m----> 4\u001b[0m r,g,b \u001b[38;5;241m=\u001b[39m \u001b[43mpil_img\u001b[49m\u001b[38;5;241m.\u001b[39msplit()\n\u001b[1;32m      5\u001b[0m r \u001b[38;5;241m=\u001b[39m r\u001b[38;5;241m.\u001b[39mpoint(\u001b[38;5;28;01mlambda\u001b[39;00m i: i \u001b[38;5;241m*\u001b[39m \u001b[38;5;241m0\u001b[39m)\n\u001b[1;32m      6\u001b[0m g \u001b[38;5;241m=\u001b[39m g\u001b[38;5;241m.\u001b[39mpoint(\u001b[38;5;28;01mlambda\u001b[39;00m i: i \u001b[38;5;241m*\u001b[39m \u001b[38;5;241m0\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'pil_img' is not defined"]},"1":{"data":{"image/png":"a127a7d7ceaab83f99da7815f2687617ec920f3d","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":26,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":94,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"9103f5","input":"my_colors = ['red', 'black', 'blue', 'orange']\nmy_colors.append('purple')\nprint(my_colors)\n\nmy_colors[2] = 'violet'\nprint(my_colors)","output":{"0":{"name":"stdout","output_type":"stream","text":"['red', 'black', 'blue', 'orange', 'purple']\n['red', 'black', 'violet', 'orange', 'purple']\n"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"bb470b","input":"for i in range(11):\n    print(i)\n    if i < 3:\n        print(\"This is a small number\")","metadata":{"id":"i1MZIEIAQPSO"},"output":{"0":{"name":"stdout","output_type":"stream","text":"0\nThis is a small number\n1\nThis is a small number\n2\nThis is a small number\n3\n4\n5\n6\n7\n8\n9\n10\n"}},"pos":49,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"a4261f","input":"i = 2\nwhile i  < 11:\n    print(i)\n    if i > 5 and i < 9:\n        print(i)\n    i += 2","metadata":{"id":"bfDfn7QqQPSP"},"output":{"0":{"name":"stdout","output_type":"stream","text":"2\n4\n6\n6\n8\n8\n10\n"}},"pos":51,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"090b7f","input":"np.random.rand(3,2) # we don't need to put the shape in braces this time","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AI-2_3UFQPST","outputId":"1daf097c-f701-49ac-95b2-89af11bcadfa"},"output":{"0":{"data":{"text/plain":"array([[0.04912864, 0.60777123],\n       [0.5187959 , 0.35016874],\n       [0.36002124, 0.94697975]])"},"exec_count":3,"output_type":"execute_result"}},"pos":80,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"43e478","input":"list = []\nfor i in range(3):\n    list.append(input(\"Input something\"))\nfor i in range(3):\n    print(list[i])","metadata":{"cocalc":{"outputs":{"0":{"name":"input","opts":{"password":false,"prompt":"Input something"},"output_type":"stream","value":"a"},"1":{"name":"input","opts":{"password":false,"prompt":"Input something"},"output_type":"stream","value":"b"},"2":{"name":"input","opts":{"password":false,"prompt":"Input something"},"output_type":"stream","value":"c"}}},"id":"fmuVGS97QPSP"},"output":{"0":{"name":"input","opts":{"password":false,"prompt":"Input something"},"output_type":"stream","value":"a"},"1":{"name":"input","opts":{"password":false,"prompt":"Input something"},"output_type":"stream","value":"b"},"2":{"name":"input","opts":{"password":false,"prompt":"Input something"},"output_type":"stream","value":"c"},"3":{"name":"stdout","output_type":"stream","text":"a\nb\nc\n"}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"416463","input":"def add_two(a, b):\n    if (a * b) %2 == 0:\n        return True\n    else: \n        return False\n    \nif add_two(1, 1) == True:\n    print(\"True\")\nelse:\n    print(\"False\")","metadata":{"id":"ISzO6E8EQPSR"},"output":{"0":{"name":"stdout","output_type":"stream","text":"False\n"}},"pos":67,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"d6e0f3","input":"my_array2 = my_array + 1\nmy_array3 = my_array2 * 2\nmy_array2, my_array3","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6tsG7vi7QPST","outputId":"1eac7ad8-caec-4eb0-9aaa-0034271058cf"},"output":{"0":{"data":{"text/plain":"(array([[1., 1., 1.],\n        [1., 1., 1.]]), array([[2., 2., 2.],\n        [2., 2., 2.]]))"},"exec_count":4,"output_type":"execute_result"}},"pos":82,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"bddf7e","input":"def list_printer(list):\n    for i in list:\n        print(i)\n        \nlist_printer(['hi', 'hello', 'hey'])","metadata":{"id":"k2IxEL5GQPSS"},"output":{"0":{"name":"stdout","output_type":"stream","text":"hi\nhello\nhey\n"}},"pos":71,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"4e1cdc","input":"\n\ndef reverser(string):\n    for char in reversed(string):\n        print(char)\n  \n   \n\nprint(reverser('hello'))\n","metadata":{"id":"zfxKJdXUQPSR"},"output":{"0":{"name":"stdout","output_type":"stream","text":"o\nl\nl\ne\nh\nNone\n"}},"pos":69,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"82eebd","input":"#Pillow will be used for image processing\nfrom PIL import Image\n#reading images from url using skimage\nfrom skimage import io\n#plt used to display images\nimport matplotlib.pyplot as plt","metadata":{"id":"4Yt9kYPsRsex"},"pos":86,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"73d95f","input":"url = \"https://www.akc.org/wp-content/uploads/2017/11/GettyImages-187066830.jpg\"","metadata":{"id":"6cFGy-7XSDkD"},"pos":88,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"755fd8","input":"a = \"a\"\nb= \"b\"\nc= \"c\"\n\n\nd = a+c\nd\n\n\n\n#e = b*c\n#e\n\n#f= a/b\n#f\n\n#g = c-b\n#g\n\nd += b\nd","metadata":{"id":"GjiFm6tdQPSH"},"output":{"0":{"data":{"text/plain":"'acb'"},"exec_count":7,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"a3de63","input":"#turn the built in axis display of pyplot off\nplt.axis(\"off\")\n\nimg = io.imread(url)\nplt.imshow(img)\nplt.show()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":529},"id":"Y5pacxDTSHI4","outputId":"c49492f9-3c29-49d8-e32d-3ec5c8b6c5b2"},"output":{"0":{"data":{"image/png":"fc63b9a2331cac38770bab0cc558424716f4ed4a","text/plain":"<PIL.Image.Image image mode=RGB size=768x512 at 0x7FC09FD20610>"},"exec_count":8,"output_type":"execute_result"}},"pos":90,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"b2c4aa","input":"import numpy as np\n\n\n\nmy_array = np.zeros((2, 3))\nmy_array = my_array - 3\n\nmy_array","metadata":{"id":"U8XkZZwXQPST"},"output":{"0":{"data":{"text/plain":"array([[-3., -3., -3.],\n       [-3., -3., -3.]])"},"exec_count":9,"output_type":"execute_result"}},"pos":84,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"c99784","input":"from PIL import Image\n\nplt.axis(\"off\") \n\npil_img = Image.fromarray(io.imread(url))\npil_img = pil_img.resize((180, 180))\nplt.imshow(pil_img)\nplt.show()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":197},"id":"mlFtREL5SqOf","outputId":"3b313407-d6f4-4f9d-b59d-eef18721b7d5"},"output":{"0":{"data":{"image/png":"4a1cf126bfbb3ddfda9d0a8c1d6427aab13e8bd1","text/plain":"<PIL.Image.Image image mode=RGB size=180x180 at 0x7FC09F835950>"},"exec_count":9,"output_type":"execute_result"}},"pos":92,"type":"cell"}
{"cell_type":"markdown","id":"0587ec","input":"Create a few boolean variables here, then try to add them together, subtract them, multiply them and divide them to see what happens. You may get an error, and thats okay. Its important to know what can and can't be done with a type of data.","metadata":{"id":"9FNdxSh_QPSH"},"pos":19,"type":"cell"}
{"cell_type":"markdown","id":"066282","input":"In the block below, create a function that takes in a list and prints out each element 1 at a time. For example, if the input was ['Dog', 'Cat', 'Hamster'], the output should be\n\nDog\n\nCat\n\nHamster","metadata":{"id":"RHk-3utjQPSR"},"pos":70,"type":"cell"}
{"cell_type":"markdown","id":"071812","input":"To access a specific item from the list, you would do the following.","metadata":{"id":"gkNke1agQPSI"},"pos":25,"type":"cell"}
{"cell_type":"markdown","id":"098f84","input":"Create a few string variables here, then try to add them together, subtract them, multiply them and divide them to see what happens. You may get an error, and thats okay. Its important to know what can and can't be done with a type of data.","metadata":{"id":"bJHCwb51QPSG"},"pos":15,"type":"cell"}
{"cell_type":"markdown","id":"0ddecd","input":"Additionally, we can use elif statements to add additional conditions to the structure.","metadata":{"id":"fRI3i4GtQPSO"},"pos":45,"type":"cell"}
{"cell_type":"markdown","id":"12e38c","input":"Here, we rename it to np to make it more easily accessable","metadata":{"id":"To484kDEQPSS"},"pos":75,"type":"cell"}
{"cell_type":"markdown","id":"21d779","input":"Sometimes we want to update the value of one variable, so we can do this","metadata":{"id":"xzqzRMEfQPSF"},"pos":10,"type":"cell"}
{"cell_type":"markdown","id":"2fe2b8","input":"### For loops, while loops, and if statements \n\n","metadata":{"id":"jpaN8K_ZQPSM"},"pos":33,"type":"cell"}
{"cell_type":"markdown","id":"324ea3","input":"Find a built in module and use it here:","metadata":{"id":"eT8dgW5dQPSY"},"pos":108,"type":"cell"}
{"cell_type":"markdown","id":"3507d4","input":"Now, it's time to explore some computer vision with OpenCv! First, we will need to import the necessary packages!","metadata":{"id":"JujQopnTRGBc"},"pos":85,"type":"cell"}
{"cell_type":"markdown","id":"36ea44","input":"Next, we want to read in the image from the url as a numpy array in RGB format and display it. The shape of the image is (512, 768, 3), meaning the dimensions of the image are 512x768 and there are 3 color channels (red, green, blue)","metadata":{"id":"BrKh22Q0ScJh"},"pos":89,"type":"cell"}
{"cell_type":"markdown","id":"388d3a","input":"In the following section we will be covering modules. Above, we leaned about functions and the power that they have. Modules let us use functions that other people have created to solve problems that we commonly incounter. For example, if we find that we frequently have to get a random number, instead of coding it every time, you could just import a function that either you or someone else created in the past. Basically, modules and importing lets us have access to the work of many other coders, making it a very powerful tool.","metadata":{"id":"DoBzshOfQPSS"},"pos":73,"type":"cell"}
{"cell_type":"markdown","id":"3b4a55","input":"Below, we will import the numpy module and use a few of its functions to show off this power","metadata":{"id":"YMj1Q1Y1QPSS"},"pos":74,"type":"cell"}
{"cell_type":"markdown","id":"3d2110","input":"Now, let's try to cast an image to only blue! pil_img.split splits an image to 3 channels of pattern: red, green, blue. We can then zero out the red and green channels (convert them to zero so they aren't displayed). Finally, we can display the blue image by merging the channels back into one image (using the Image.merge function) and displaying the result!","metadata":{"id":"_ZB7mlZ1S6FY"},"pos":93,"type":"cell"}
{"cell_type":"markdown","id":"40fa27","input":"or like this:","metadata":{"id":"-pwjOYSVQPST"},"pos":79,"type":"cell"}
{"cell_type":"markdown","id":"43279f","input":"Now its your turn. Either break up into 3 teams and have each team solve one of the blocks or solve them all together.","metadata":{"id":"wjW9z8CRQPSO"},"pos":47,"type":"cell"}
{"cell_type":"markdown","id":"4ae006","input":"Now, figure out how to `append` a new element to the end of the list. Maybe google \"how to append an element to a list python\"\n\nFinally change a value in the list to something new.\n","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"4cc812","input":"Just like regular variables, we can do opperations on this list","metadata":{"id":"Oj3NxYvIQPST"},"pos":81,"type":"cell"}
{"cell_type":"markdown","id":"51ea9e","input":"Now for if statements. The if-elif-else statement is used to conditionally execute a statement or a block of statements. Conditions can be true or false, execute one thing when the condition is true, something else when the condition is false.","metadata":{"id":"bKSvGNMWQPSN"},"pos":41,"type":"cell"}
{"cell_type":"markdown","id":"548347","input":"Functions act like variables but instead of storing a value, they store lines of code. Below we can see how a function is created and used.","metadata":{"id":"aemAHfB4QPSP"},"pos":55,"type":"cell"}
{"cell_type":"markdown","id":"5704d4","input":"**TODO:** Below, create a list of your favorite colors. Then figure out how to add a new element to the end of the list. Finally change a value in the list to something new.\n","metadata":{"id":"cVoRoZXlQPSL"},"pos":29,"type":"cell"}
{"cell_type":"markdown","id":"57e61c","input":"In the next block, create a while loop that prints out all of the even numbers between 1 and 10. Additionally, if the number is between 5 and 9, print the number out a second time.","metadata":{"id":"Ya1WOHEYQPSP"},"pos":50,"type":"cell"}
{"cell_type":"markdown","id":"59fc5e","input":"In the block below, create a function that takes in a string and returns the string in reverse order. For example, if the input was \"Hello\" the output should be \"olleH\"\n\n","metadata":{"id":"xTdLtZ6oQPSR"},"pos":68,"type":"cell"}
{"cell_type":"markdown","id":"5c80b2","input":"### Variables","metadata":{"id":"Rapm-jaKQPR-"},"pos":2,"type":"cell"}
{"cell_type":"markdown","id":"650339","input":"Whenever the computer sees the function being used, it automatically runs the code stored inside of that function.","metadata":{"id":"GTZ6ePf4QPSQ"},"pos":58,"type":"cell"}
{"cell_type":"markdown","id":"656bad","input":"In the block below, create a function that takes in 2 numbers and returns True if the product of the numbers is positive and False in all other cases.\n\n","metadata":{"id":"jdhIClbLQPSR"},"pos":66,"type":"cell"}
{"cell_type":"markdown","id":"751dd8","input":"The first element in the list is at index 0, then the second element is at index 1 and so on.\n\n","metadata":{"id":"GL-XB9INQPSJ"},"pos":27,"type":"cell"}
{"cell_type":"markdown","id":"7ab05a","input":"Now its your turn! You can either work on each of the following challenges in teams of 2 or walk through each one as a group. In any case, it is recommended to look at them at a high level together so that everyone understands the concepts in each section.\n\n","metadata":{"id":"FgNa_pDHQPSR"},"pos":65,"type":"cell"}
{"cell_type":"markdown","id":"813e3f","input":"Make an array from my_array of all -3s:\n\n","metadata":{"id":"lSdXMubIQPST"},"pos":83,"type":"cell"}
{"cell_type":"markdown","id":"897da2","input":"We can also perform basic algebra to these variables and save the output to a new variable","metadata":{"id":"kMi8ltKcQPSB"},"pos":5,"type":"cell"}
{"cell_type":"markdown","id":"8fe73a","input":"You may notice that we have to call the function we need by placing it after the module connected by a dot\n\nBut many times, that is inconvenient and we can get around it like this","metadata":{"id":"3YhUswp6QPSY"},"pos":110,"type":"cell"}
{"cell_type":"markdown","id":"97fea8","input":"Next, we'll take a look at while loops. In general, you can make a while loop do anything that a for loop can do but with slightly different syntax, so if you find youself understanding while loops better than for loops, you can just focus on using while loops. ","metadata":{"id":"Del5jaQ2QPSN"},"pos":38,"type":"cell"}
{"cell_type":"markdown","id":"a0b757","input":"Numpy is a library which is coded outside of python, making it faster. It gives us access to better and more efficient lists\n\nWith it, we can make a list like this:","metadata":{"id":"TerJarLUQPSS"},"pos":77,"type":"cell"}
{"cell_type":"markdown","id":"a17476","input":"time allows us to access the current time","metadata":{"id":"9KiSuvOdQPSX"},"pos":104,"type":"cell"}
{"cell_type":"markdown","id":"a232b2","input":"In the block below, we will make a while loop that runs 5 times. For while loops, we can't specify how long they will run for ahead of time so its important for us to create an achievable exit condition. An exit condition is just the condition that will cause the code to stop running. This is checked every time, immediatly before the code runs or reruns. We want to make sure that this condition will eventually happen, otherwise the code will run until something crashes or we manually close it","metadata":{"id":"DpD_UkYBQPSN"},"pos":39,"type":"cell"}
{"cell_type":"markdown","id":"a3b4ae","input":"Lists work similarly to the variables we created above but store multiple values. We'll cover the types metioned above then ask the students to try and create their own versions of them.\n","metadata":{"id":"M5cuEuaDQPSI"},"pos":22,"type":"cell"}
{"cell_type":"markdown","id":"a52041","input":"Variables work by assigning a value to a specific word or string of characters. It can be done using the \"=\" sign. This assigns whatever is on the right the string of characters on the left. We'll go ahead and try assigning a few variables in the next block.","metadata":{"id":"-UGnaDpyQPR_"},"pos":3,"type":"cell"}
{"cell_type":"markdown","id":"a9bb42","input":"We will learn more about for loops in the next lesson. For now, we will use them to go through a list and print out each element.","metadata":{"id":"SwBpJqbpQPSM"},"pos":34,"type":"cell"}
{"cell_type":"markdown","id":"aa0b95","input":"This can get quite annoying with longer variable names, so we can do the following","metadata":{"id":"AS_t_yXaQPSF"},"pos":12,"type":"cell"}
{"cell_type":"markdown","id":"ab587e","input":"Additionally, functions can take in one or multiple values to use in their code, as we can see below.","metadata":{"id":"7IdW6EBEQPSQ"},"pos":59,"type":"cell"}
{"cell_type":"markdown","id":"af7283","input":"Finnally, functions can have a \"return\" statement. This is what the function sends back to the place it was called. You can think of functions like black boxes where the parameters in the parentheses are the input and the return statement is the output. This output can be saved to a variable to be used later. We will redefine the add_numbers function from above using a return statement to show this off.","metadata":{"id":"G5DqQXXhQPSQ"},"pos":62,"type":"cell"}
{"cell_type":"markdown","id":"b698e7","input":"Our image is a little too large, let's first convert it to a Pillow image. Pillow is a convenient library that gives us a lot of image processing functions. We can then use the built in resizing function of a PIL image to resize it to 180x180. ","metadata":{"id":"Cp_0BoQ4SkMt"},"pos":91,"type":"cell"}
{"cell_type":"markdown","id":"b8e579","input":"In the next block, create a for loop that counts from 0 to 10 and prints out each number. Additionally, if the number is less than 3, print out \"This is a small number\".","metadata":{"id":"RcbZ9NNyQPSO"},"pos":48,"type":"cell"}
{"cell_type":"markdown","id":"c7206d","input":"random allows us to get random numbers","metadata":{"id":"Nj_EQDY1QPSY"},"pos":106,"type":"cell"}
{"cell_type":"markdown","id":"c7a4de","input":"The goal of this notebook is to provide students with knowledge of the fundamentals of python. We will take a more interactive approach than most class room settings and ask the students to do some research on their own then bring their learnings back here to share with the class. ","metadata":{"id":"_dO5QVgOQPR-"},"pos":1,"type":"cell"}
{"cell_type":"markdown","id":"ca0878","input":"Create a few float variables here, then try to add them together, subtract them, multiply them and divide them to see what happens. You may get an error, and thats okay. Its important to know what can and can't be done with a type of data.","metadata":{"id":"rU_jfwkYQPSH"},"pos":17,"type":"cell"}
{"cell_type":"markdown","id":"cb9601","input":"We can add else statements to the above. An else statement is what will be run if the original statement is false.","metadata":{"id":"S7M1Iq_5QPSO"},"pos":43,"type":"cell"}
{"cell_type":"markdown","id":"cca04a","input":"finally, as we did with the numpy module, we can rename the function","metadata":{"id":"H36mITafQPSZ"},"pos":112,"type":"cell"}
{"cell_type":"markdown","id":"d3a8d6","input":"# Python Basics","metadata":{"id":"0ExiI3s_QPR7"},"pos":0,"type":"cell"}
{"cell_type":"markdown","id":"d74317","input":"First, we want to get the url of a particular image","metadata":{"id":"4B9AUzneSXS_"},"pos":87,"type":"cell"}
{"cell_type":"markdown","id":"d8af8f","input":"In the next block, ask the user to input 3 items and add them all to a list. Then. create a loop that prints out each item that the user entered.","metadata":{"id":"_HlQPTo3QPSP"},"pos":52,"type":"cell"}
{"cell_type":"markdown","id":"e02a5f","input":"### Lists, Dictionaries, and Tuples\n\n","metadata":{"id":"7di_vtlyQPSI"},"pos":21,"type":"cell"}
{"cell_type":"markdown","id":"e1788d","input":"Below, find your own image, display it, resize it to your choosing, make the image only green or red, and then rotate it!","metadata":{"id":"rdxAD41lTUNj"},"pos":97,"type":"cell"}
{"cell_type":"markdown","id":"ecf385","input":"### Modules (Numpy and OpenCV)","metadata":{"id":"ZQzAmW9EQPSS"},"pos":72,"type":"cell"}
{"cell_type":"markdown","id":"f18423","input":"### Functions","metadata":{"id":"o-mm3dAcQPSP"},"pos":54,"type":"cell"}
{"cell_type":"markdown","id":"f336d2","input":"Finally, let's try and rotate this image!\n\n","metadata":{"id":"fLNqTYnHTLMF"},"pos":95,"type":"cell"}
{"cell_type":"markdown","id":"f83862","input":"If you are coding this on your own, you may need to install packages like numpy or OpenCV, which we will get into later, but there are many built in packages as well","metadata":{"id":"AfyUKmPmQPSX"},"pos":103,"type":"cell"}
{"cell_type":"markdown","id":"fa953d","input":"First up, lists. you can create a list with the following code.","metadata":{"id":"e8GIOzZJQPSI"},"pos":23,"type":"cell"}
{"cell_type":"markdown","id":"fcabb9","input":"Next, we will look at how to make a list run a specific number of times.","metadata":{"id":"oUJi_1qhQPSN"},"pos":36,"type":"cell"}
{"cell_type":"markdown","id":"fdf1ee","input":"There are tons of different types of variables we can make. For this next section, we will ask the students to go out and figure out how to create the following types of variable: strings, floats and booleans. Once you have created these variables, try the same operations we used above and see what they do.","metadata":{"id":"-2QKfa4lQPSG"},"pos":14,"type":"cell"}
{"id":0,"time":1658250321528,"type":"user"}
{"last_load":1658511844370,"type":"file"}